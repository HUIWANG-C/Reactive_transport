#!/bin/bash

source parms

cp ../../../data/set$setid/stl/solid.stl constant/triSurface/wallFluidSolid.stl
cp ../../../data/set$setid/stl/"$caseid"_phases.stl constant/triSurface/wallFluidFluid.stl

bb="$(surfaceCheck constant/triSurface/wallFluidSolid.stl -outputThreshold 0 | grep 'Bounding Box')"
bb_arr=$(echo $bb | tr -dc '.[:space:][:digit:]-')
x0="`echo $bb_arr | cut -d' ' -f1`"
y0="`echo $bb_arr | cut -d' ' -f2`"
x1="`echo $bb_arr | cut -d' ' -f4`"
y1="`echo $bb_arr | cut -d' ' -f5`"
z0=-0.5
z1=0.5
lx="`echo "$x1 - $x0" | bc -l`"
ly="`echo "$y1 - $y0" | bc -l`"
x_cells="`echo "($lx + $buff) * $discr" | bc -l`"
x_cells="`printf "%.0f\n" $(bc <<< $x_cells)`"
y_cells="`echo "$ly * $discr" | bc -l`"
y_cells="`printf "%.0f\n" $(bc <<< $y_cells)`"
x0_full="`echo "$x0" | bc -l`"
x1_full="`echo "$x1 + $buff" | bc -l`"
buffvol=$(awk -v buff="$buff" -v ly="$ly" -v scxy="$scale_xy" -v scz="$scale_z" 'BEGIN{printf("%.15G",buff*ly*scxy*scxy*scz)}')
medvol=$(awk -v lx="$lx" -v ly="$ly" -v scxy="$scale_xy" -v scz="$scale_z" 'BEGIN{printf("%.15G",lx*ly*scxy*scxy*scz)}')

foamDictionary constant/flowParms -entry mediumVolume -set "$medvol" -precision 15
foamDictionary constant/flowParms -entry bufferVolume -set "$buffvol" -precision 15
foamDictionary system/blockMeshDict -entry vertices -set "( ($x0_full $y0 $z0) ($x1_full $y0 $z0) ($x1_full $y1 $z0) ($x0_full $y1 $z0) ($x0_full $y0 $z1) ($x1_full $y0 $z1) ($x1_full $y1 $z1) ($x0_full $y1 $z1) )"
foamDictionary system/blockMeshDict -entry blocks -set "( hex ( 0 1 2 3 4 5 6 7 ) ( $x_cells $y_cells 1 ) simpleGrading ( 1 1 1 ) )"

blockMesh
rm -r processor*
foamDictionary system/decomposeParDict -entry numberOfSubdomains -set $nproc
decomposePar -copyZero
echo Running snappyHexMesh
mpirun -np $nproc snappyHexMesh > logSnappyHexMesh -overwrite -parallel
echo Finished running snappyHexMesh
mpirun -np $nproc transformPoints -scale "($scale_xy $scale_xy $scale_z)" -parallel
